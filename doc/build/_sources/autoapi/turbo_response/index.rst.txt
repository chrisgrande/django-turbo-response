:mod:`turbo_response`
=====================

.. py:module:: turbo_response


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   exceptions/index.rst
   middleware/index.rst
   mixins/index.rst
   response/index.rst
   utils/index.rst
   views/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   turbo_response.TurboFrameTemplateResponse
   turbo_response.TurboStreamResponse
   turbo_response.TurboStreamStreamingResponse
   turbo_response.TurboStreamTemplateResponse



Functions
~~~~~~~~~

.. autoapisummary::

   turbo_response.render_turbo_frame
   turbo_response.render_turbo_frame_template
   turbo_response.render_turbo_stream
   turbo_response.render_turbo_stream_template


.. py:class:: TurboFrameTemplateResponse(request, template, context, *, dom_id, **kwargs)

   Bases: :class:`django.template.response.TemplateResponse`

   .. attribute:: is_turbo_frame
      :annotation: = True

      

   .. method:: rendered_content(self)
      :property:



.. py:class:: TurboStreamResponse(content=b'', *, action, target, **kwargs)

   Bases: :class:`turbo_response.response.TurboStreamResponseMixin`, :class:`django.http.HttpResponse`


.. py:class:: TurboStreamStreamingResponse(*args, **kwargs)

   Bases: :class:`turbo_response.response.TurboStreamResponseMixin`, :class:`django.http.StreamingHttpResponse`


.. py:class:: TurboStreamTemplateResponse(request, template, context, *, action, target, **kwargs)

   Bases: :class:`turbo_response.response.TurboStreamResponseMixin`, :class:`django.template.response.TemplateResponse`

   .. attribute:: is_turbo_stream
      :annotation: = True

      

   .. method:: rendered_content(self)
      :property:



.. function:: render_turbo_frame(dom_id, content='')


.. function:: render_turbo_frame_template(template, context, *, dom_id, **kwargs)


.. function:: render_turbo_stream(action, target, content='')


.. function:: render_turbo_stream_template(template, context, *, action, target, **kwargs)


