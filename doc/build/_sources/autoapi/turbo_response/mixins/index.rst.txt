:mod:`turbo_response.mixins`
============================

.. py:module:: turbo_response.mixins


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   turbo_response.mixins.TurboStreamResponseMixin
   turbo_response.mixins.TurboStreamTemplateResponseMixin
   turbo_response.mixins.PartialTemplateResolverMixin
   turbo_response.mixins.TurboStreamFormMixin
   turbo_response.mixins.TurboFrameResponseMixin
   turbo_response.mixins.TurboFrameTemplateResponseMixin



.. py:class:: TurboStreamResponseMixin

   .. attribute:: turbo_stream_action
      

      

   .. attribute:: turbo_stream_target
      

      

   .. method:: get_turbo_stream_action(self)


   .. method:: get_turbo_stream_target(self)


   .. method:: get_response_content(self)


   .. method:: render_turbo_stream_response(self, **response_kwargs)



.. py:class:: TurboStreamTemplateResponseMixin

   Bases: :class:`turbo_response.mixins.TurboStreamResponseMixin`

   Use with ContextMixin subclass

   .. method:: get_turbo_stream_template_names(self)


   .. method:: render_turbo_stream_response(self, context, **response_kwargs)



.. py:class:: PartialTemplateResolverMixin

   Bases: :class:`turbo_response.mixins.TurboStreamTemplateResponseMixin`

   Use with ContextMixin subclass

   .. attribute:: partial_template_prefix
      :annotation: = _

      

   .. attribute:: turbo_stream_template_name
      

      

   .. method:: get_partial_template_names(self)


   .. method:: get_turbo_stream_template_names(self)



.. py:class:: TurboStreamFormMixin

   Bases: :class:`turbo_response.mixins.PartialTemplateResolverMixin`

   Use with ContextMixin subclass

   .. attribute:: turbo_stream_action
      :annotation: = replace

      

   .. method:: form_invalid(self, form)



.. py:class:: TurboFrameResponseMixin

   .. attribute:: turbo_frame_dom_id
      

      

   .. method:: get_turbo_frame_dom_id(self)


   .. method:: get_response_content(self)


   .. method:: render_turbo_frame_response(self, **response_kwargs)



.. py:class:: TurboFrameTemplateResponseMixin

   Bases: :class:`turbo_response.mixins.TurboFrameResponseMixin`

   Use with ContextMixin subclass

   .. method:: render_turbo_frame_response(self, context, **response_kwargs)



